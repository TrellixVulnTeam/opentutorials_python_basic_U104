< 객체지향 프로그래밍(Object-Oriented Programming = OOP) >

[ 객체 지향의 개념 ] 그림->코드->그림->코드 순으로 강의 진행.

- 모듈 : 프로그램의 규모가 커지면서 여러 함수가 등장하는데 그에 따른 문제(복잡도)를 해결하기 위해 비슷한 성격의 함수를 모아놓은 공간.

- 이러한 모듈의 등장에서 더 나아가 프로그래밍 전반에 걸쳐 적용하기위해 객체(object)가 등장하였고 대표적으로 Class, Instance 가 있다.
- 포유류(= class) : 사람(instance), 고양이(instance), 말(instance)....등등
- 오브젝트라는 개념을 들여다보면 그안에 클래스와 인스턴스가 있다고 생각하고 이해해보자.

[클래스와 인스턴스의 관계]
- 오브젝트 = class + instance
- 클래스 : 모듈과 비슷한 개념으로서 일종의 수납공간이자 그룹핑이다. 연관된 '함수'와 '변수'를 모아놓은 공간.
- 인스턴스 : 
			일반적으로 클래스는 그대로 사용되지 않고 복제하여 사용자에 맞게 변형하여 사용한다. 이를 인스턴스라 한다.
			클래스에서 정의된 함수와 변수를 그대로 사용하며 하나의 클래스를 통해 여러개의 인스턴스를 생성할 수 있다.

			인스턴스마다 가지는 변수의 값 즉, 매개변수가 달라지며 그것을 이용해 함수가 동작하게 되는 것이다.

[ 객체는 왜 사용할까? ]
- 공부를 하다보면 책이 많아지게 된다. 내가 찾고싶은 책을 점차 찾기 힘들어진다.
  이떄 서로 연관되어있는 것들 끼리 모아놓는 다면 커다란 카테고리가 생기기 때문에 찾기가 쉬워진다.
  함수, 모듈 즉, 객체 지향도 같은 개념으로 이해하면 좋다.

  
